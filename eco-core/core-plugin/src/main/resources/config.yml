#
# eco
# by Auxilor
#

mysql:
  enabled: false # Set to false, data.yml will be used instead.
  # How many threads to execute statements on. Higher numbers can be faster however
  # very high numbers can cause issues with OS configuration. If writes are taking
  # too long, increase this value.
  threads: 2
  # The maximum number of MySQL connections.
  connections: 10
  # If read operations should be ran in the thread pool. Runs on main thread by default.
  async-reads: false
  host: localhost
  port: 3306
  database: database
  user: username
  password: passy

# Options to fix villager bugs left behind from old (buggy) versions.
villager-display-fix: false

# DropQueue by default uses a faster collated queue system where all drops
# that originate from the same player on the same tick are dropped together.
# Disable it if it changes drop mechanics too much for you.
use-fast-collated-drops: true

# Some plugins use their own item display systems (eg Triton)
# And must be run after eco. Don't enable this unless you run a conflicting plugin
# and have been told to enable it.
use-lower-protocollib-priority: false

# Display frames massively optimize PacketWindowItems, however some users have
# reported display bugs by using it. If you have any problems with it, then you
# should disable this option.
use-display-frame: true

# Time to live for a display frame. In other words, this is how frequent (in ticks)
# that display frames will be cleared / deleted.
display-frame-ttl: 17

# The default bukkit NamespacedKey creation can cause decent amounts of lag under
# load due to the use of regex validation in the constructor. eco has its own system
# to create NamespacedKeys, however it can be unsafe as it skips most validation checks.
# If you encounter any bugs with this, then enable this option - however it will come
# at a performance penalty.
use-safer-namespacedkey-creation: false

# If the stack traces of extensions that failed to load should be logged. Disabled by
# default to prevent users from reporting bugs. Enable if you're a developer.
log-full-extension-errors: false

# Window items packets have the option to be run asynchronously. This may cause
# some bugs and is considered experimental, however it has been tested without
# any apparent issues. Enable this if performance is absolutely crucial or if you
# are experiencing severe display lag.
async-display:
  # If async display should always be used.
  always-enabled: false

  # Log errors that occur in async processing.
  log-errors: true

  # The inventory types that should never be processed asynchronously.
  # A list of IDs can be found here:
  # https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/inventory/InventoryType.html
  disable-on-types:
    - 'anvil'

  # If the server is running under heavy load (below a certain TPS value), enable
  # async display automatically. This can prevent some server crashes under load.
  emergency:
    # If emergency async should be used.
    enabled: true
    # Below this TPS value, emergency async display will be used.
    cutoff: 17

  # If players with a large amount of display packets should have their processing
  # done asynchronously. This will help if a player is trying to crash the server
  # by overloading the display system.
  ratelimit:
    # If rate limit async display should be used.
    enabled: false
    # The amount of window items packets per timeframe needed to enable async display
    # for a specified player.
    cutoff: 4
    # The length of the timeframe in seconds.
    # Cutoff 5, Timeframe 1 means that if there are more than 5 window items packets
    # being sent per second for a player, then that player should have their packets
    # handled asynchronously.
    timeframe: 1